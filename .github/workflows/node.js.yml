# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: Node.js CI

# on:
#   push:
#     branches: [ "main" ]
  

# jobs:
#   build:

#     runs-on: self-hosted

#     strategy:
#       matrix:
#         node-version: [18.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v3
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: npm run build --if-present
#     - run: pm2 restart index.js

name: CICD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Get run number
        id: get-run-number
        run: echo "RUN_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Build and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          RUN_NUMBER: ${{ env.RUN_NUMBER }}
          REPOSITORY: autotask-stripe
        run: |
          echo "ECR_REGISTRY=$ECR_REGISTRY"
          echo "RUN_NUMBER=$RUN_NUMBER"
          echo "REPOSITORY=$REPOSITORY"

          # Build a docker container
          docker build -t $ECR_REGISTRY/$REPOSITORY:$RUN_NUMBER .
          docker push $ECR_REGISTRY/$REPOSITORY:$RUN_NUMBER

          # If this is the latest push to main, tag the image as 'latest'
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            docker tag $ECR_REGISTRY/$REPOSITORY:$RUN_NUMBER $ECR_REGISTRY/$REPOSITORY:latest
            docker push $ECR_REGISTRY/$REPOSITORY:latest
          fi


          

          
